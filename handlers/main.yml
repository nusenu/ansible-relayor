---

- name: stop-and-mask default tor instance
  become: true
  systemd:
    name: 'tor@default'
    state: 'stopped'
    enabled: false
    masked: true
  when: ansible_pkg_mgr == 'apt'

- name: restart apparmor
  become: true
  service: name=apparmor state=restarted

- name: systemctl daemon-reload
  become: true
  systemd:
    daemon_reload: true

- name: re-gather facts
  setup:

- name: disable default tor instance FreeBSD
  become: true
  lineinfile:
    dest: /etc/rc.conf
    line: "tor_disable_default_instance=\"YES\""
    create: true
  when: ansible_system == 'FreeBSD'

# TODO: this restarts all instances on a FreeBSD host even if just one torrc changed
- name: Ensure Tor instances are restarted if its torrc changed (FreeBSD)
  become: true
  service:
    name: tor
    state: restarted
  when: ansible_system == 'FreeBSD'

- name: Ensure Tor instances are restarted if its torrc changed (Linux)
  become: true
  service:
    name: "tor@{{ item.item.0.ipv4 }}_{{ item.item.1.orport }}.service"
    state: restarted
  with_items: "{{ tor_instances_tmp.results }}"
  when: item.changed and ansible_system == 'Linux'

- name: Ensure Tor instances are restarted if its torrc changed (OpenBSD)
  become: true
  service:
    name: "tor{{ item.item.0.ipv4|replace('.','_') }}_{{ item.item.1.orport }}"
    state: restarted
  with_items: "{{ tor_instances_tmp.results }}"
  when: item.changed and ansible_system == 'OpenBSD'
  tags:
    - reconfigure

- name: Ensure Tor instances are reloaded if tor-exit-notice.html changed (FreeBSD)
  become: true
  service:
    name: tor
    state: reloaded
  when: ansible_system == 'FreeBSD'

- name: Ensure Tor instances are reloaded if tor-exit-notice.html changed (Linux)
  become: true
  service:
    name: "tor@{{ item.item.0.ipv4 }}_{{ item.item.1.orport }}.service"
    state: reloaded
  with_items: "{{ tor_instances_tmp.results }}"
  when: ansible_system == 'Linux'

- name: Ensure Tor instances are reloaded if tor-exit-notice.html changed (OpenBSD)
  become: true
  service:
    name: "tor{{ item.item.0.ipv4|replace('.','_') }}_{{ item.item.1.orport }}"
    state: reloaded
  with_items: "{{ tor_instances_tmp.results }}"
  when: ansible_system == 'OpenBSD'

- name: assemble prometheus configuration
  become: true
  assemble:
    src: "{{ tor_prometheus_confd_folder }}"
    dest: "{{ tor_prometheus_config_file }}"
    owner: root
    group: "{{ tor_prometheus_group }}"
    mode: "0640"
    backup: true
    validate: promtool check config %s
  delegate_to: "{{ tor_prometheus_host }}"

- name: reload prometheus
  become: true
  service:
    name: prometheus
    state: reloaded
  delegate_to: "{{ tor_prometheus_host }}"

- name: reload nginx
  become: true
  service:
    name: nginx
    state: reloaded
